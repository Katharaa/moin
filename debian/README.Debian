MoinMoin 2 for Debian
=====================

For brevity, Moin is used to refer to MoinMoin throughout this document.
Unless otherwise stated, all references to Moin without an explicit version
number refer to MoinMoin 2, as opposed to MoinMoin 1.9 and earlier.

Commands to be run are preceded with either the $ or # prompt, indicating
unprivileged and privileged use.


Contents
--------

 1. Getting Started
 1.1 Creating a New Wiki Site
 1.2 Standalone Hosting
 1.3 Hosting with Apache2 using WSGI
 1.4 Further Configuration
 1.5 More Documentation
 2. Upgrading from Earlier Versions of Moin
 3. The moin Command
 4. Optional Features


1. Getting Started
------------------

This Debian package has been tested running Moin either using its built-in Web
server or as a WSGI application with the Apache Web server.

1.1 Creating a New Wiki Site
----------------------------

This package provides the moin command which is used to populate a directory
for new a wiki site or instance. If such a directory does not exist, the tool
will attempt to create it. Here, the appropriate considerations regarding file
and directory ownership and user privileges apply.

To create a new wiki site or instance in /var/www/moin2 with a usable
collection of help and welcome pages:

    $ moin create-instance --full --path /var/www/moin2
    $ cd /var/www/moin2
    $ moin index-create

The --full option can be omitted and additional pages added later using the
following commands. For example, for English help pages:

    $ moin load-help -n en
    $ moin index-build

For a locally accessible wiki, a directory may be created under a user's home
directory or other generally accessible location. For a more broadly
accessible wiki served by a Web server, it may be prudent to create a
directory within /var/www for consistency with normal administrative
practices. Specific details related to this latter scenario are given in the
appropriate section below.

1.2 Standalone Hosting
----------------------

Moin offers a built-in Web server that allows the hosting of a wiki on a
system without having to configure a dedicated Web server. This can be started
as follows:

    $ moin run

By default, it will serve on a local address, inaccessible to other systems on
a network, but this can be changed by specifying host and port options. The
Moin developers do not generally recommend using the built-in server in this
way. However, making Moin available in this way can be made somewhat safer by
specifying additional options disabling the built-in debugger and
auto-reloading:

    $ moin run --host 0.0.0.0 --port 8080 --no-debugger --no-reload

Running Moin on a privileged port requires invocation by a privileged user and
is strongly discouraged.

1.3 Hosting with Apache 2 using WSGI
------------------------------------

The Apache WSGI module is a recommendation for this package and may have been
installed with this package. If not, it can be installed as follows:

    # apt install libapache2-mod-wsgi-py3

The module is enabled in Apache and the server restarted as follows:

    # a2enmod wsgi
    # service apache2 restart

To observe administrative conventions, a location under /var/www may be
created to hold a new wiki. However, the moin command will not be able to
create such a directory unless run as a privileged user. Instead of running
moin as such a privileged user, it is recommended that a new directory is
created first and its ownership changed so that it may be accessed by certain
unprivileged users including the Web server itself.

To create a directory for a new wiki in /var/www/moin2 to be accessed by an
unprivileged user, here given as myuser, the following commands can be run:

    # mkdir /var/www/moin2
    # chown myuser /var/www/moin2

With this directory in place, the wiki can be initialised by the unprivileged
user as described above.

In addition to the wiki content, a WSGI script is also required. This can be
installed by running the supplied script:

    $ moin2-apache-wsgi moin2

This will install a file called moin2.wsgi into /var/www/moin2.

Apache must now be given permission to read the wiki by issuing the following
command as a privileged user:

    # chown -R www-data /var/www/moin2

A site definition for the wiki should be added to the Apache configuration.
This can be installed by running the supplied script:

    # moin2-apache-site moin2

The site is enabled and the server configuration reloaded as follows:

    # a2ensite moin2
    # service apache2 reload

The new wiki should now be up and running.

1.4 Further Configuration
-------------------------

The wikiconfig.py file installed in the directory created for a wiki should be
edited to customise the wiki configuration. A number of settings can be
usefully changed and some of these are given below.

The name of your wiki or site:

    sitename = 'My MoinMoin'

The home page or landing page when visiting the top level of the site:

    default_root = 'Home'

The default theme for the site:

    theme_default = 'modernized'

Superuser nomination and other editing restrictions:

    acl_functions = '+YourName:superuser'

For more complex setups for Apache 2.4 or other Web servers, please refer to
the server options section of the package documentation:

/usr/share/doc/python3-moinmoin2/html/admin/serve.html

A number of deployment scripts are also included in the examples for this
package:

/usr/share/doc/python3-moinmoin2/examples

1.5 More Documentation
----------------------

The Moin documentation is included with this package:

/usr/share/doc/python3-moinmoin2/html/index.html

The online version of this documentation is found at the following location at
the time of writing:

https://moin-20.readthedocs.io/en/latest/index.html


2. Upgrading from earlier versions of moin
------------------------------------------

Thank you for being here. We know the road was hard, but MoinMoin2 is finally here.
We will guide you as best we can to get your 1.9 version upgraded to 2.0+. 
Internally, moin2 is very different than moin 1.x.
It is recomended you name your folders as moin2 to make sure we keep it clean during migration. 

Upgrading typically involve the following steps:

 *. Is your moin <1.9?
 *. From moin 1.9.x
 *. Backup!!!
 *. Upgrade from 1.9.x
 *. Adjust moin2 configuration, confirm working
 *. [Optional]Clean up your moin 1.9 data using moin 1.9
 *. Importing your moin 1.9 data
 *. Testing


From moin < 1.9:
----------------
    If you run an older moin version than 1.9, please first upgrade to a recent moin 1.9.x 
    version (preferably >= 1.9.7) before upgrading to moin2. You may want to run that for a
    while to be sure everything is working as expected.

    Note:
    Both moin 1.9.x and moin2 are WSGI applications. 
    Upgrading to 1.9 first also makes sense concerning the WSGI / server side.

From moin 1.9.x:
----------------
    If you want to keep your user’s password hashes and migrate them to moin2,
    make sure you use moin >= 1.9.7 WITH enabled passlib support and that all
    password hashes stored in user profiles are {PASSLIB} hashes. Other hashes
    will get removed in the migration process and users will need to do password recovery via email
    (or with admin help, if that does not work). 
    Need any additional help here, refer to moin2 mailing list.


*Backup*:
---------
    Have a backup of everything, so you can go back in case it doesn’t do what you expect. 
    If you have a testing machine, it is a good idea to try it there first and not directly
    modify your production machine.
    
    #Example
    #tar -czvf mywiki-moin1.9-2023.tar.gz /path/to/data
    
    #and make an extra copy that we can use because in next step we might start
    #to deleting cache files and deleted pages.
    #cp -ar /path/to/wiki/data /path/to/wiki/data-copy


*Upgrade from 1.9.x*
--------------------

Adjusting the moin2 configuration:
    Your blank wiki should be up and running without any problems. 
    Before importing your existing wiki data, please ensure you have created an instance and index
    as described in the install section above (i.e. moin creat-instance, moin index-create steps):
    It is essential that you review and edit wikiconfig.py before you import your 1.9 data.

Clean up your moin 1.9 data using moin 1.9 
    If you already upgarded and moin1.9 is no longer in a system skip this.
    If you are still on the old version, you can clean up cache before we transfer to new version.
    It is a good idea to clean up your 1.9 data first, before trying to import it into moin2.
    In doing so you can avoid quite some warnings that the moin2 importer would produce.

    You do this with moin 1.9, using these commands (as root):
    # moin --config-dir=/etc/moin maint cleancache
    # moin --config-dir=/etc/moin maint cleanpage

Importing your moin 1.9 data:
    The import19 cli subcommand will read your 1.9 data_dir (pages, attachments and users),
    convert the data, write it to your moin2 storage and build the index:

    cd /var/www/moin2
    moin import19 --data_dir /<path to moin1.9>/wiki/data
    
    #Example:
    #moin import19 --data_dir /var/www/moin1.9/wiki/data-copy

    #You should see something like this:
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:231 Finished conversion!
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:106 Migration statistics:
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:107 Users     :      1
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:108 Items     :    131
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:109 Revisions :    128
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      1 - missing_user
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      5 - missing_file
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      1 - del_item
    
    
    #Rebuild the index, and change the owner of the index files. 
    moin index-build
    chown -R www-data /var/www/moin2


    #CONGRATULATIONS!!!!

    #Note that inside wikiconfig.py there is a setting
    #default_root = 'Home'
    #You can change that to point to any page you just imported. 
    #In some older instances for example the main page used to be 'FrontPage'


    The import19 process will create a wiki directory structure different from moin 1.9.
    There will be three namespaces under /wiki/data: “default”, “userprofiles”, and “users”.
    Each namespace will have “data” and “meta” subdirectories. Additional custom namespaces can be created by
    editing wikiconfig.py.

    Most of the data from the 1.9 pages directory will be converted to the “default” directory.
    User home pages and subpages will be converted to the “users” directory. The data from the 1.9 “users” directory
    will be converted to the “userprofiles” directory.
    The “userprofiles” directory contains data used internally and should always be protected from any access by ACLs.



Testing:
    Review the logs for error messages. Start the moin server and try
    the “Index” and “History” views to see what is included.
    Check whether your data is complete and rendering correctly.

    If you find issues with data migration from moin 1.9 to 2,
    please check the moin2 issue tracker.

Keep your backups:
    Make sure you keep all backups of your moin 1.9 installation,
    such as code, config, data, just in case you need to
    clean /var/www/moin2 and redo setup and migration.



3. The moin Command
-------------------

    There are a lot of useful extra commands provided by Moin: account
    administration, data migration, etc. Read the docs for more
    information about what's available here. As a Moin admin they will
    make your life much easier!
    
    moin --help


4. Optional Features
--------------------

Some optional features requires extra packages and configuration


ReadOnly Static html export-dump
    If you have a heavy ready site you can export all pages to static html.
    Dump of prod wiki into html files for read only system or some high performance /cache/
    #moin dump-html --directory /usr/share/moin2-static --theme topside_cms --exclude-ns userprofiles --query .*


Markdown Markup
    Markdown became popular in last few years especially with git related repos for quick Readme or docs.
    Review your options of using md as the syntax.
    https://moin-20.readthedocs.io/en/latest/user/markdown.html#markdown-markup
    or even converting existing pages
    https://moin-20.readthedocs.io/en/latest/man/moin.html#m-interface

Enjoy!
Debian MoinMoin2 Team
