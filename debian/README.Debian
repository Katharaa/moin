moin for Debian
===============

Contents
--------

 1. Typical setup
 1.1 Host with Apache2 with /wiki Example
 2. Upgrading from earlier versions of moin
 3. "Moin ... <command>"
 4. Optional Features

1. Typical setup
----------------

This Debian package has been tested mostly as WSGI 
with Apache 2.4 (It should work with any web server supporting either
of these: WSGI, FCGI, FastCGI, SCGI, CGI)

1.1 Apache2 Example: A single wiki as libapache2-mod-wsgi-py3 with Apache2
----------------------------------------------

 I) Create a new instance of wiki and populate it into /var/www/moin2
    moin create-instance --path /var/www/moin2/  
    cd /var/www/moin2/
    moin index-create
    
    #[Optional] If you want to test it 
        #moin run --host=0.0.0.0
    #[Optional]if you want to load english help files
        #moin load-help -n en
        #moin index-build
    
    #Create a wsgi file /var/www/moin2/moin2.wsgi and paste below

```

from moin.app import create_app
application = create_app('/var/www/moin2/wikiconfig.py')
    
```

 II) Give Apache2 permission to read your wiki:
    # chown -R www-data /var/www/moin2


 III) Enable Apache2 wsgi module and restart:
    a2enmod wsgi
    service apache2 restart

 IV) Add wiki to Apache2 configuration and reload:
    #Add the following to /etc/apache2/sites-available/000-default.conf
    #It should be placed inside VirtualHost right before the end 

	WSGIScriptAlias /wiki /var/www/moin2/moin2.wsgi
	WSGIProcessGroup moin2

    #Reload or Restart Apache2
    service apache2 reload
    
Congratulations!! our site should not be up and running. 
Welcome to MoinMoin2.


 V) Optional Configure for MoinMoin2:
    
    Edit /var/www/moin2/wikiconfig.py:

    #Search and change the name of your site:
	    sitename = u'My MoinMoin' # [Unicode]
    #Search and change the Landing page when site loads:
        default_root = 'Home'
    #Search and change default theme for whole site:
        theme_default = ....
    #Search and make a superuser
        acl_functions = ...


For more complex setups for apache 2.4, or nginx please refer to moin2 documentation
https://moin-20.readthedocs.io/en/latest/admin/serve.html
especially
https://github.com/moinwiki/moin/tree/master/docs/examples/deployment


2. Upgrading from earlier versions of moin
------------------------------------------

Thank you for being here. We know the road was hard, but MoinMoin2 is finally here.
We will guide you as best we can to get your 1.9 version upgraded to 2.0+. 
Internally, moin2 is very different than moin 1.x.
It is recomended you name your folders as moin2 to make sure we keep it clean during migration. 

Upgrading typically involve the following steps:

 *. Is your moin <1.9?
 *. From moin 1.9.x
 *. Backup!!!
 *. Upgrade from 1.9.x
 *. Adjust moin2 configuration, confirm working
 *. [Optional]Clean up your moin 1.9 data using moin 1.9
 *. Importing your moin 1.9 data
 *. Testing


From moin < 1.9:
----------------
    If you run an older moin version than 1.9, please first upgrade to a recent moin 1.9.x 
    version (preferably >= 1.9.7) before upgrading to moin2. You may want to run that for a
    while to be sure everything is working as expected.

    Note:
    Both moin 1.9.x and moin2 are WSGI applications. 
    Upgrading to 1.9 first also makes sense concerning the WSGI / server side.

From moin 1.9.x:
----------------
    If you want to keep your user’s password hashes and migrate them to moin2,
    make sure you use moin >= 1.9.7 WITH enabled passlib support and that all
    password hashes stored in user profiles are {PASSLIB} hashes. Other hashes
    will get removed in the migration process and users will need to do password recovery via email
    (or with admin help, if that does not work). 
    Need any additional help here, refer to moin2 mailing list.


*Backup*:
---------
    Have a backup of everything, so you can go back in case it doesn’t do what you expect. 
    If you have a testing machine, it is a good idea to try it there first and not directly
    modify your production machine.
    
    #Example
    #tar -czvf mywiki-moin1.9-2023.tar.gz /path/to/data
    
    #and make an extra copy that we can use because in next step we might start
    #to deleting cache files and deleted pages.
    #cp -ar /path/to/wiki/data /path/to/wiki/data-copy


*Upgrade from 1.9.x*
--------------------

Adjusting the moin2 configuration:
    Your blank wiki should be up and running without any problems. 
    Before importing your existing wiki data, please ensure you have created an instance and index
    as described in the install section above (i.e. moin creat-instance, moin index-create steps):
    It is essential that you review and edit wikiconfig.py before you import your 1.9 data.

Clean up your moin 1.9 data using moin 1.9 
    If you already upgarded and moin1.9 is no longer in a system skip this.
    If you are still on the old version, you can clean up cache before we transfer to new version.
    It is a good idea to clean up your 1.9 data first, before trying to import it into moin2.
    In doing so you can avoid quite some warnings that the moin2 importer would produce.

    You do this with moin 1.9, using these commands (as root):
    # moin --config-dir=/etc/moin maint cleancache
    # moin --config-dir=/etc/moin maint cleanpage

Importing your moin 1.9 data:
    The import19 cli subcommand will read your 1.9 data_dir (pages, attachments and users),
    convert the data, write it to your moin2 storage and build the index:

    cd /var/www/moin2
    moin import19 --data_dir /<path to moin1.9>/wiki/data
    
    #Example:
    #moin import19 --data_dir /var/www/moin1.9/wiki/data-copy

    #You should see something like this:
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:231 Finished conversion!
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:106 Migration statistics:
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:107 Users     :      1
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:108 Items     :    131
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:109 Revisions :    128
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      1 - missing_user
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      5 - missing_file
    #2023-11-03 15:52:26,567 INFO moin.cli.migration.moin19.import19:113 Warnings  :      1 - del_item
    
    
    #Rebuild the index, and change the owner of the index files. 
    moin index-build
    chown -R www-data /var/www/moin2


    #CONGRATULATIONS!!!!

    #Note that inside wikiconfig.py there is a setting
    #default_root = 'Home'
    #You can change that to point to any page you just imported. 
    #In some older instances for example the main page used to be 'FrontPage'


    The import19 process will create a wiki directory structure different from moin 1.9.
    There will be three namespaces under /wiki/data: “default”, “userprofiles”, and “users”.
    Each namespace will have “data” and “meta” subdirectories. Additional custom namespaces can be created by
    editing wikiconfig.py.

    Most of the data from the 1.9 pages directory will be converted to the “default” directory.
    User home pages and subpages will be converted to the “users” directory. The data from the 1.9 “users” directory
    will be converted to the “userprofiles” directory.
    The “userprofiles” directory contains data used internally and should always be protected from any access by ACLs.



Testing:
    Review the logs for error messages. Start the moin server and try
    the “Index” and “History” views to see what is included.
    Check whether your data is complete and rendering correctly.

    If you find issues with data migration from moin 1.9 to 2,
    please check the moin2 issue tracker.

Keep your backups:
    Make sure you keep all backups of your moin 1.9 installation,
    such as code, config, data, just in case you need to
    clean /var/www/moin2 and redo setup and migration.



3. "moin ... <command>"
-----------------------

    There are a lot of useful extra commands provided by Moin: account
    administration, data migration, etc. Read the docs for more
    information about what's available here. As a Moin admin they will
    make your life much easier!
    
    moin --help


4. Optional Features
--------------------

Some optional features requires extra packages and configuration


ReadOnly Static html export-dump
    If you have a heavy ready site you can export all pages to static html.
    Dump of prod wiki into html files for read only system or some high performance /cache/
    #moin dump-html --directory /usr/share/moin2-static --theme topside_cms --exclude-ns userprofiles --query .*


Markdown Markup
    Markdown became popular in last few years especially with git related repos for quick Readme or docs.
    Review your options of using md as the syntax.
    https://moin-20.readthedocs.io/en/latest/user/markdown.html#markdown-markup
    or even converting existing pages
    https://moin-20.readthedocs.io/en/latest/man/moin.html#m-interface

Enjoy!
Debian MoinMoin2 Team
