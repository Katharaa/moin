From: Paul Boddie <paul@boddie.org.uk>
Date: Tue, 15 Aug 2023 23:50:33 +0200
Subject: Fix UnboundLocalError for logger.

Attempt to avoid unbound local and unbounded recursion errors when
initialising the logger.

moin (2.0+git20230330.c55318e3-1) unstable; urgency=medium

  * Initial release.
---
 src/moin/log.py | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/src/moin/log.py b/src/moin/log.py
index 5a6c76f..c06a7f7 100644
--- a/src/moin/log.py
+++ b/src/moin/log.py
@@ -120,6 +120,9 @@ def load_config(conf_fname=None):
     """ load logging config from conffile """
     global configured
     err_msg = None
+    was_configured = configured
+    configured = True
+    logger = getLogger(__name__)
     conf_fname = os.environ.get('MOINLOGGINGCONF', conf_fname)
     if conf_fname:
         try:
@@ -133,18 +136,14 @@ def load_config(conf_fname=None):
                 logging.config.fileConfig(f)
             finally:
                 f.close()
-            configured = True
-            logger = getLogger(__name__)
             logger.debug('using logging configuration read from "{0}"'.format(conf_fname))
             warnings.showwarning = _log_warning
         except Exception as err:  # XXX be more precise
             err_msg = str(err)
-    if not configured:
+    if not was_configured:
         # load builtin fallback logging config
         with StringIO(logging_config) as f:
             logging.config.fileConfig(f)
-        configured = True
-        logger = getLogger(__name__)
         if err_msg:
             logger.warning('load_config for "{0}" failed with "{1}".'.format(conf_fname, err_msg))
         logger.debug('using logging configuration read from built-in fallback in moin.log module!')
